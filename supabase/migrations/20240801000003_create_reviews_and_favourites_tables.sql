-- Table for storing reviews
CREATE TABLE public.reviews (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  booking_id BIGINT REFERENCES public.bookings(id) NOT NULL UNIQUE, -- A booking can only be reviewed once
  user_id UUID REFERENCES auth.users(id) NOT NULL,
  washer_id UUID REFERENCES auth.users(id) NOT NULL,
  rating NUMERIC(2, 1) NOT NULL CHECK (rating >= 1 AND rating <= 5),
  comment TEXT,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

-- Enable RLS for reviews
ALTER TABLE public.reviews ENABLE ROW LEVEL SECURITY;

-- RLS Policies for reviews
CREATE POLICY "Users can insert their own reviews." ON public.reviews FOR INSERT WITH CHECK (auth.uid() = user_id);
CREATE POLICY "Public can view all reviews." ON public.reviews FOR SELECT USING (true);

-- Table for storing user's favourite washers
CREATE TABLE public.favourite_washers (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) NOT NULL,
  washer_id UUID REFERENCES auth.users(id) NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
  UNIQUE(user_id, washer_id) -- A user can only favourite a washer once
);

-- Enable RLS for favourite_washers
ALTER TABLE public.favourite_washers ENABLE ROW LEVEL SECURITY;

-- RLS Policies for favourite_washers
CREATE POLICY "Users can manage their own favourites." ON public.favourite_washers FOR ALL USING (auth.uid() = user_id);

-- Create indexes for better performance
CREATE INDEX idx_reviews_booking_id ON public.reviews(booking_id);
CREATE INDEX idx_reviews_user_id ON public.reviews(user_id);
CREATE INDEX idx_reviews_washer_id ON public.reviews(washer_id);
CREATE INDEX idx_reviews_rating ON public.reviews(rating);
CREATE INDEX idx_favourite_washers_user_id ON public.favourite_washers(user_id);
CREATE INDEX idx_favourite_washers_washer_id ON public.favourite_washers(washer_id);

-- Add comments for documentation
COMMENT ON TABLE public.reviews IS 'User reviews for completed bookings';
COMMENT ON TABLE public.favourite_washers IS 'User''s favourite washers for quick rebooking';
COMMENT ON COLUMN public.reviews.rating IS 'Rating from 1.0 to 5.0 stars';
COMMENT ON COLUMN public.reviews.booking_id IS 'One review per booking (unique constraint)';
COMMENT ON COLUMN public.favourite_washers.user_id IS 'User who favourited the washer';
COMMENT ON COLUMN public.favourite_washers.washer_id IS 'Washer who was favourited'; 